name: My-Workshop

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'input your software version'
        required: true
        default: '1.0.0'
        type: string
  push:
    branches:
      - main-1

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.set-image-version.outputs.image-version }}
    steps:
      - name: Set Tag on Push
        if: github.event_name == 'push'
        run: |
          echo "IMAGE_TAG=${GITHUB_REF#refs/*/}"
          echo "::set-output name=image-version::${GITHUB_REF#refs/*/}"
      - name: Set Tag on Workflow Dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "IMAGE_TAG=${{ github.event.inputs.version }}"
          echo "::set-output name=image-version::${{ github.event.inputs.version }}"
  build:
    if: ${{ github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: check server-info
        run: lsb_release -a

      - name: git checkout
        run: git clone -b sample-app-0 https://github.com/nukoolmu/public-laboratory.git

      - name: docker login
        run: docker login -u nukoolm -p ${{ Secrets.DOCKER_REGISTRY }}

      - name: build and push
        run: |
          cd public-laboratory 

          docker build -f Dockerfile-appB . -t nukoolm/sample-app:${{ needs.prepare.outputs.image-version }}
          docker push nukoolm/sample-app:${{ needs.prepare.outputs.image-version }}
      
  approve:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - name: wait for Approve    
        uses: trstringer/manual-approval@v1
        id: check-approval
        with:
          secret: ${{ github.TOKEN }}
          approvers: "nukoolmu, samah603"
          minimum-approvals: 1

  deploy:
    needs: [prepare, build, approve]
    if:  ${{ needs.build.result == 'skipped' || needs.build.result == 'success' && needs.approve.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: |
          echo "Build Result: ${{ needs.build.result }}"
          echo "Approved Result: ${{ needs.approve.result }}"
      - name: Deploy Image
        run: |
          echo "Deploying my-image:${{ needs.prepare.outputs.image-version }}"
          # Add your deployment steps here